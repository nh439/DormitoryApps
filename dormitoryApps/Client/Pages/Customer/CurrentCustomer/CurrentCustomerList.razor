@using dormitoryApps.Shared.Model.Entity;
@using dormitoryApps.Client.Services;
@using System.Timers;
@inject CurrentCustomerService _currentCustomerService;
@inject SessionServices _sessionServices;
@inject RoomServices _roomServices;
@implements IDisposable;
@code {
    int page = 1;
    List<CurrentCustomer> currentCustomers;
    Timer timer = new Timer();
    string remarkColor = "red";
    List<Room> rooms = new List<Room>();
    int customerCount = 0;
    protected override void OnInitialized()
    {
        _sessionServices.RequiredPermission();
        Get();
        timer = new Timer(2000);
        timer.Elapsed += Tick;
        timer.Enabled = true;

    }
    private async void Get()
    {
        await _currentCustomerService.Get(page).ContinueWith(response =>
        {
            currentCustomers = response.Result != null ? response.Result.OrderByDescending(x => x.ContractDate).ToList() : new List<CurrentCustomer>();
        });
        rooms = await _roomServices.GetRooms();
        customerCount = currentCustomers.Count;
    }
    private void Tick(object sender, ElapsedEventArgs e)
    {
        remarkColor = remarkColor.Equals("red") ? "blue" : "red";
        Get();
        StateHasChanged();
    }
    void IDisposable.Dispose()
    {
        timer?.Dispose();
    }
}
<link rel="stylesheet" type="text/css" href="semantic/dist/semantic.min.css">
<br />
<center>
    <h1>ผู้เช่าปัจจุบัน</h1>
</center>
<br />
<br />
<button class="btn btn-primary mx-1" @onclick="()=>contract.Open()">ทำสัญญาเช่า</button>
<button class="btn btn-success mx-1" @onclick="()=> booking.Open()">จองห้องเช่า</button>
<br />
<br />
<table class="table" style="text-align:center">
    <thead class="table-dark">
        <tr>
            <td>Id</td>
            <td>ชื่อ/รหัสห้อง</td>
            <td>จำนวนผู้พักอาศัย</td>
            <td>วันที่เข้าพัก</td>
            <td>ค่าเช่า</td>
            <td>วันทำสัญญา</td>
            <td>วันที่ Check Out</td>
            <td>ใบจอง</td>
            <td></td>
        </tr>
    </thead>
    <tbody class="table-danger">
        @if (currentCustomers == null)
        {
            <tr>
                <td colspan="9">Fetching...</td>
            </tr>
        }
        else if (currentCustomers?.Count == 0)
        {
            <tr>
                <td colspan="9">ไม่พบลูกค้า</td>
            </tr>
        }
        else
        {
            @foreach (var customer in currentCustomers)
            {
                <tr>
                    <td>@customer.Id</td>
                    <td>@(rooms.Where(x=>x.Id== customer.RoomId).FirstOrDefault() != null ?rooms.Where(x=>x.Id== customer.RoomId).FirstOrDefault().RoomName:"Unknown Room")</td>
                    <td>@(customer.Members != null ? customer.Members.Count :0)</td>
                    <td>@customer.Stayed.ToLongDateString() @(customer.Booking ? "*":string.Empty)</td>
                    <td>@customer.Rental บาท</td>
                    <td>@customer.ContractDate.ToString("dd MMMM yyyy HH:mm:ss")</td>
                    <td>@(customer.StayUntil.HasValue ? customer.StayUntil.Value.ToString("dd MMMM yyyy HH:mm:ss") :"ยังไม่มีการแจ้งออก")</td>
                    <td>
                        @if (customer.Booking)
                        {
                            <i class="check icon"></i>
                        }
                    </td>
                    <td>
                        <button class="btn btn-info" @onclick="()=>details.Open(customer.Id)">รายละเอียด</button>
                        @if (customer.Booking)
                        {
                            <button class="btn btn-success" @onclick="()=>CFB.Open(customer.Id)">ทำสัญญา</button>
                        }
                        else
                        {
                            <button class="btn btn-danger" @onclick="()=>preCheckOut.Open(customer.Id)">แจ้งออก</button>
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item @(page <=1 ? "disabled":"")">
            <button class="page-link" @onclick="()=>{
page--;
StateHasChanged();
}">
                Previous
            </button>
        </li>
        @for (int i = -1; i <= 1; i++)
        {
            int destination = page + i;
            if (destination >= 1 && (customerCount < 20 && destination > page) == false)
            {
                <li class="page-item @(destination==page ?"active":"") ">
                    <button class="page-link"  @onclick="()=>{
                    page=destination;
                    StateHasChanged();
                    }">@destination</button>
                </li>
            }
        }
        <li class="page-item @(customerCount < 20 ? "disabled":"")">
            <button class="page-link " @onclick="()=>{
page++;
StateHasChanged();
}">
                Next
            </button>
        </li>
    </ul>
</nav>
<br />
<h2 style="color:@remarkColor">* ตรงวันที่เข้าพัก หมายถึงวันที่ใบจองหมดอายุ</h2>
<dormitoryApps.Client.Pages.Customer.CurrentCustomer.Modal.CreateBooking @ref="booking" />
<dormitoryApps.Client.Pages.Customer.CurrentCustomer.Modal.ContractFromBooking @ref="CFB"/>
<dormitoryApps.Client.Pages.Customer.CurrentCustomer.Modal.Details @ref ="details"/>
<dormitoryApps.Client.Pages.Customer.CurrentCustomer.Modal.CreateContract @ref="contract"/>
<dormitoryApps.Client.Pages.Customer.CurrentCustomer.Modal.PreCheckOut @ref="preCheckOut"/>
@code {
    private dormitoryApps.Client.Pages.Customer.CurrentCustomer.Modal.CreateBooking booking;
    private dormitoryApps.Client.Pages.Customer.CurrentCustomer.Modal.ContractFromBooking CFB;
    private dormitoryApps.Client.Pages.Customer.CurrentCustomer.Modal.Details details;
    private dormitoryApps.Client.Pages.Customer.CurrentCustomer.Modal.CreateContract contract;
    private dormitoryApps.Client.Pages.Customer.CurrentCustomer.Modal.PreCheckOut preCheckOut;
}
