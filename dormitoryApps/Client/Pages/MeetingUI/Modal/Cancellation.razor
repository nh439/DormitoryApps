@using Blazorise;
@using Blazorise.RichTextEdit;
@using Blazored.Typeahead;
@using dormitoryApps.Shared.Model.Entity;
@using dormitoryApps.Client.Services;
@using System.Collections;
@inject MeetingServices _meetingServices;
@inject OfficerServices _officerServices;
@inject SessionServices _sessionServices;

@code {
    Modal e;
    Meeting item = new Meeting();
    bool reasonValidate = false;
    public async void Open(long meetingId)
    {
        await e.Show();
        item = await _meetingServices.GetMeeting(meetingId);

    }
}
<Modal @ref="e" Style="color:black">
    <ModalContent>
        <ModalHeader>
            ยกเลิกการประชุม <CloseButton></CloseButton>
        </ModalHeader>
        <ModalBody>
            <center>
                <h1>ยกเลิกการประชุม</h1>
            </center>
            <div class="form-group">
                <label for="text">รหัส</label>
                <input id="text" @bind-value="item.Id" type="text" class="form-control" readonly>
            </div>
            <div class="form-group">
                <label for="text1">ชื่อ</label>
                <input id="text1" @bind-value="item.Name" type="text" class="form-control" readonly>
            </div>
            <div class="form-group">
                <label for="textarea">เหตุผลในการยกเลิก</label>
                <textarea id="textarea" @bind="item.Remark" cols="40" rows="5" class="form-control @(reasonValidate ? "is-invalid":"")"></textarea>
            </div>
        </ModalBody>
        <ModalFooter>
            <Button Class="btn btn-outline-danger">ยืนยันการยกเลิก</Button>
            <Button Class="btn btn-outline-info" @onclick="()=>e.Hide()">ปิดหน้าต่างนี้</Button>
        </ModalFooter>
    </ModalContent>
</Modal>