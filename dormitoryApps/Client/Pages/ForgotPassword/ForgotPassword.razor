@page "/ForgotPassword"
@using dormitoryApps.Shared.Model.Entity;
@using dormitoryApps.Shared.Model.Other;
@using dormitoryApps.Client.Services;
@using System.Text;
@inject OfficerServices _officerServices;
@inject ForgotPasswordServices _forgotPasswordServices;
@inject EmailServices _emailServices;
@inject EmailTemplateService _emailTemplateService;
@inject NavigationManager _navigationManager;

@code {
    int step = 1;
    string criteria;
    string criteriaException;
    bool criteriaCheck = false;
    Officer officer = new Officer();
    string message = string.Empty;

    async void Check()
    {
        criteriaCheck = string.IsNullOrEmpty(criteria);
        criteriaException = "ห้ามเว้นว้าง";
        officer = await _officerServices.GetByUsername(criteria);
        if (officer == null || officer == new Officer())
        {
            step = 1;
            criteriaCheck = true;
            criteriaException = "ไม่พบชื่อผู้ใช้";
            StateHasChanged();
        }
        step = 2;
        StateHasChanged();
    }
    async void Send()
    {
        try
        {
            if (officer == null || officer == new Officer())
            {
                step = 1;
                criteriaCheck = true;
                criteriaException = "ไม่พบชื่อผู้ใช้";
                StateHasChanged();
                return;
            }
            dormitoryApps.Shared.Model.Entity.ForgotPassword forgotPassword = new dormitoryApps.Shared.Model.Entity.ForgotPassword()
                {
                    Email = officer.Email,
                    ForgotDate = DateTime.Now,
                    Expired = false,
                    ExpiredAt = DateTime.Now.AddMinutes(30),
                    UserId = officer.Id,
                    HasReset = false
                };
            var res = await _forgotPasswordServices.Create(forgotPassword);
            if (!res)
            {
                message = "ส่งคำร้องไม่สำเร็จ";
                StateHasChanged();
                return;
            }
            step = 3;
            string template = await _emailTemplateService.GetForgotPasswordWithToken();
            string url = $"{_navigationManager.BaseUri}/Reset/{officer.Id}/{Convert.ToBase64String(Encoding.ASCII.GetBytes(forgotPassword.Token))}";
            template = _emailTemplateService.PatchData(template, $"{officer.Firstname} {officer.Surname}", url, "Nithi Residence Adminstration Team");
            MailRequest request = new MailRequest()
                {
                    Body = template,
                    Subject = "Reset Password",
                    ToEmail = new string[] { officer.Email }
                };
            _emailServices.SendAsync(request);
            message = "ช่องทาง Reset Password ถูกส่งไปที่ Email ของพนักงานเรียบร้อย โปรด Reset ภายใน 30 นาที";
            StateHasChanged();
        }
        catch (Exception x)
        {
            step = 3;
            message = x.Message;
            StateHasChanged();

        }
    }
}
<center>
    <h1>ลืมรหัสผ่าน</h1>
</center>
<br />
<div class="row">
    <div class="col"></div>
    <div class="col">
        <div class="form-group">
            <label for="text">Email หรือ ชื่อผู้ใช้</label>
            <input id="text" @bind-value="criteria" type="text" class="form-control @(criteriaCheck ? "is-invalid":"")">
            <small style="color:red;display:@(criteriaCheck ? "block":"none")">@criteriaException</small>
        </div>
        <br />
        <div class="form-group">
            <button name="submit" @onclick="Check" class="btn btn-primary">ค้นหา</button>
        </div>
    </div>
    <div class="col"></div>
</div>
<br />
@if (step > 1)
{
    <div class="row">
        <div class="col"></div>
        <div class="col">
            <div class="form-group">
                <label for="text">ชื่อพนักงาน</label>
                <input id="text" name="text" type="text" value="@($"{officer.Firstname} {officer.Surname}")" class="form-control" readonly>
            </div>
            <br>
            <div class="form-group">
                <label>สิ่งที่คุณทำได้</label>
                <div>
                    <div class="custom-controls-stacked">
                        <div class="custom-control custom-radio">
                            <input name="radio" id="radio_0" type="radio" class="custom-control-input" value="1" checked>
                            <label for="radio_0" class="custom-control-label">ส่งลิ้งค์เปลี่ยนรหัสผ่านทางอีเมล</label>
                        </div>
                    </div>
                    <div class="custom-controls-stacked">
                        <div class="custom-control custom-radio">
                            <input name="radio" id="radio_1" type="radio" class="custom-control-input" value="2" disabled>
                            <label for="radio_1" class="custom-control-label">Option2</label>
                        </div>
                    </div>
                </div>
                <button class="btn btn-success" @onclick="Send">ส่งคำขอ Reset Password</button>
            </div>
        </div>
        <div class="col"></div>
    </div>
}
@if (step == 3)
{
    <center>
        <h2> @message</h2>
    </center>
}
