@using Blazorise;
@using dormitoryApps.Client.Services;
@using dormitoryApps.Shared.Model.Entity;
@using dormitoryApps.Shared.Model.Other;
@using System.Globalization;
@inject PostitionServices _postitionServices;
@inject PostitionLineService _postitionLineService;
@inject DepartmentServices _departmentServices;
@inject OfficerServices _officerServices;
@inject AddressServices _addressServices;
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css">
@code {
    Modal e;
    Officer officer = new Officer();
    Department department = new Department();
    Postition postition = new Postition();
    PostitionLine postitionLine = new PostitionLine();
    dormitoryApps.Shared.Model.Entity.Address myAddress = new dormitoryApps.Shared.Model.Entity.Address();
    public async void Show(long officerId)
    {
        officer = await _officerServices.GetById(officerId);
        if (officer == null || officer == new Officer()) return;
        postition = await _postitionServices.GetById(officer.Postition);
        postitionLine = await _postitionLineService.GetById(postition.Line);
        department = await _departmentServices.GetById(postition.Department);
        myAddress = await _addressServices.GetAddress(officer.Address);
        await e.Show();
        await InvokeAsync(StateHasChanged);
    }
}
<Modal @ref="e" Style="color:black">
    <ModalContent>
        <ModalHeader>
            <ModalTitle>@(officer.Firstname+" "+officer.Surname)</ModalTitle>
            <CloseButton></CloseButton>
        </ModalHeader>
        <ModalBody>
            <center>
                @if (officer.Img == null)
                {
                    <img height="300" width="200" />
                }
                else
                {
                    <img height="300" width="200" src=" data:image/png;base64,@Convert.ToBase64String(officer.Img)" />
                }
            </center>
            <br />
            <h2>รหัส : @officer.Id</h2>
            <h2>ชื่อ : @(officer.Prefix+" "+officer.Firstname+" "+officer.Surname)</h2>
            <h2>Email : @officer.Email</h2>
            <h2>วันเกิด : @officer.Brithday.ToString("dd MMMM yyyy",new CultureInfo("th-TH"))</h2>
            <h2>วันที่เริ่มงาน : @officer.Registerd.ToString("dd MMMM yyyy",new CultureInfo("th-TH"))</h2>
            <h2>ตำแหน่ง : @postition.Name</h2>
            <h2>สายงาน : @postitionLine.Name</h2>
            <h2>แผนก : @department.Name</h2>
            <h2>ที่อยู่ : @("ต."+myAddress.Subdistrict+" อ."+myAddress.District+" จ."+myAddress.Province+" "+myAddress.PostalCode)</h2>
            <h2>
                สถานะ :
                @if (officer.Expired)
                {
                    <div class="ui red large label">
                        <i class="x icon"></i> ไม่ได้เป็นพนักงานแล้ว
                    </div>
                }
                else
                {
                    <div class="ui green large label">
                        <i class="check icon"></i> ยังเป็นพนักงานอยู่
                    </div>
                }
            </h2>
            @if(officer.Expired)
            {
                <h2>พ้นสภาพเมื่อ : @officer.expiredDate.ToString("dd MMMM yyyy")</h2>
                <h2>เนื่องจาก : @officer.remark</h2>
            }
        </ModalBody>
        <ModalFooter>
            <Button Class="btn btn-secondary" @onclick="()=>e.Hide()">Close</Button>
        </ModalFooter>
    </ModalContent>
</Modal>
